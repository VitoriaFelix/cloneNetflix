[{"C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\index.js":"1","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\App.js":"2","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\MovieRow\\index.js":"4","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\Header\\index.js":"5","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\FeaturedMovie\\index.js":"6"},{"size":199,"mtime":1628865547864,"results":"7","hashOfConfig":"8"},{"size":2019,"mtime":1629500485101,"results":"9","hashOfConfig":"8"},{"size":2335,"mtime":1629323577361,"results":"10","hashOfConfig":"8"},{"size":1784,"mtime":1629470999637,"results":"11","hashOfConfig":"8"},{"size":687,"mtime":1629480187527,"results":"12","hashOfConfig":"8"},{"size":1727,"mtime":1629481806538,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1j5zzjl",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\index.js",[],["29","30"],"C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\App.js",["31"],"C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\Tmdb.js",["32"],"const API_KEY = \"e3ebb2a353cb3b7c0dc3776ca522b42e\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\n\r\nconst basicFecth = async (endpoint) => {\r\n  return (await fetch(`${API_BASE}${endpoint}`)).json();\r\n};\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: \"originals\",\r\n        title: \"Originais do Netflix\",\r\n        items: await basicFecth(\r\n          `/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"trending\",\r\n        title: \"Recomendados para Você\",\r\n        items: await basicFecth(\r\n          `/trending/all/week?language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"toprated\",\r\n        title: \"Em Alta\",\r\n        items: await basicFecth(\r\n          `/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"action\",\r\n        title: \"Ação\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"comedy\",\r\n        title: \"Comédia\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"horror\",\r\n        title: \"Terror\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"romance\",\r\n        title: \"Romance\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"documentary\",\r\n        title: \"Documentários\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n    ];\r\n  },\r\n  getMovieInfo:async (movieId, tipo) =>{\r\n    let info = {};\r\n    if(movieId){\r\n      switch(tipo){\r\n        case 'movie':\r\n          info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n        break;\r\n        case 'tv':\r\n          info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n          break;\r\n          default:\r\n            info = null;\r\n            break;\r\n\r\n      }\r\n    }\r\nreturn info;\r\n  }\r\n};\r\n","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\MovieRow\\index.js",["33"],"import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) =>{\r\n\r\n    const [scrollX, setScrollX]= useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () =>{\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if(window.innerWidth - listW > x)\r\n        {\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow-left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}} />\r\n            </div>\r\n            <div className=\"movieRow-right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\"style={{\r\n                    marginLeft :scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">    \r\n                            <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\Header\\index.js",["34"],"C:\\Users\\Home\\Documents\\CloneNetflix\\netflixclone\\src\\components\\FeaturedMovie\\index.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":1,"nodeType":"42","endLine":75,"endColumn":2},{"ruleId":"40","severity":1,"message":"43","line":8,"column":1,"nodeType":"42","endLine":87,"endColumn":3},{"ruleId":"40","severity":1,"message":"41","line":6,"column":1,"nodeType":"42","endLine":51,"endColumn":2},{"ruleId":"40","severity":1,"message":"41","line":4,"column":1,"nodeType":"42","endLine":19,"endColumn":2},{"ruleId":"40","severity":1,"message":"41","line":4,"column":1,"nodeType":"42","endLine":39,"endColumn":2},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]
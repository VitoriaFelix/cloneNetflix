{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\CloneNetflix\\\\netflixclone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setblackHeader] = useState(false);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      let originals = list.filter(i => i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randonChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setblackHeader(true);\n      } else {\n        setblackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      black: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Feito em Live (https://www.youtube.com/watch?v=tBweoUiMsDg).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 69\n      }, this), \"Todos os direitos das imagens s\\xE3o da Netflix.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 54\n      }, this), \"Dados Extraidos do site Themoviedb.org\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), movieList.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\",\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"Hu//Euzo0T2h7Z/HjMTixdha0eI=\");","map":{"version":3,"sources":["C:/Users/Home/Documents/CloneNetflix/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setblackHeader","loadAll","list","getHomeList","originals","filter","i","slug","randonChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () =>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData]= useState(null);\n  const [blackHeader, setblackHeader]= useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i=> i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randonChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () =>{\n        if(window.scrollY > 10){\n          setblackHeader(true);\n        }else{\n          setblackHeader(false);\n        }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () =>{\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && \n        <FeaturedMovie item ={featuredData}/>\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) =>(\n          <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n        ))\n\n        }\n      </section>\n      <footer>\n        Feito em Live (https://www.youtube.com/watch?v=tBweoUiMsDg).<br/>\n        Todos os direitos das imagens s√£o da Netflix.<br/>\n        Dados Extraidos do site Themoviedb.org\n      </footer>\n\n\n    {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n    }\n    </div>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}